#
# Check for:
#
# - 1 OpenStackNetConfig
# - 1 OpenStackMACAddress
# - 1 TestAssert
#

apiVersion: osp-director.openstack.org/v1beta1
kind: OpenStackNetConfig
metadata:
  finalizers:
  - openstacknetconfig.osp-director.openstack.org
  name: openstacknetconfig
  namespace: openstack
spec:
  attachConfigurations:
    br-osp:
      nodeNetworkConfigurationPolicy:
        desiredState:
          interfaces:
          - bridge:
              options:
                stp:
                  enabled: false
              port:
              - name: enp7s0
            description: Linux bridge with enp7s0 as a port
            mtu: 1500
            name: br-osp
            state: up
            type: linux-bridge
        nodeSelector:
          node-role.kubernetes.io/worker: ""
      nodeSriovConfigurationPolicy:
        desiredState:
          deviceType: vfio-pci
          mtu: 9000
          numVfs: 0
          port: ""
          spoofCheck: "on"
          trust: "off"
  dnsServers:
  - 172.22.0.1
  domainName: osptest.test.metalkube.org
  networks:
  - isControlPlane: true
    mtu: 1500
    name: Control
    nameLower: ctlplane
    subnets:
    - attachConfiguration: br-osp
      ipv4:
        allocationEnd: 172.22.0.250
        allocationStart: 172.22.0.100
        cidr: 172.22.0.0/24
        gateway: 172.22.0.1
        routes: []
      ipv6:
        allocationEnd: ""
        allocationStart: ""
        cidr: ""
        gateway: ""
        routes: []
      name: ctlplane
      vlan: 0
    vip: true
  ovnBridgeMacMappings:
    physNetworks:
    - macPrefix: fa:16:3a
      name: datacentre
    - macPrefix: fa:16:3b
      name: datacentre2
  preserveReservations: false
  reservations:
    controller-0:
      ipReservations: {}
      macReservations:
        datacentre: fa:16:3a:aa:aa:aa
    controller-1:
      ipReservations: {}
      macReservations:
        datacentre: fa:16:3a:aa:aa:bb
    controller-2:
      ipReservations: {}
      macReservations:
        datacentre: fa:16:3a:aa:aa:cc
    controlplane:
      ipReservations:
        ctlplane: 172.22.0.110
      macReservations: {}
    openstackclient-0:
      ipReservations:
        ctlplane: 172.22.0.251
      macReservations: {}
status:
  provisioningStatus:
    attachDesiredCount: 1
    attachReadyCount: 1
    netDesiredCount: 1
    netReadyCount: 1
    physNetDesiredCount: 2
    physNetReadyCount: 2
    reason: OpenStackNetConfig openstacknetconfig all resources configured
    state: Configured
---
apiVersion: osp-director.openstack.org/v1beta1
kind: OpenStackMACAddress
metadata:
  name: openstacknetconfig
  namespace: openstack
spec:
  physNetworks:
  - macPrefix: fa:16:3a
    name: datacentre
  - macPrefix: fa:16:3b
    name: datacentre2
  roleReservations:
    Controller:
      reservations:
        controller-2:
          deleted: false
          reservations:
            datacentre: fa:16:3a:aa:aa:cc
status:
  currentState: Created
  macReservations:
    controller-2:
      deleted: false
      reservations:
        datacentre: fa:16:3a:aa:aa:cc
  reservedMACCount: 2
---
apiVersion: kuttl.dev/v1beta1
kind: TestAssert
timeout: 10
namespaced: true
commands:
  - script: |
      set -x
      # should return the new reservation for the added physnet
      reservation=$(oc get -n openstack osmacaddr openstacknetconfig -o json | jq .spec.roleReservations.Controller.reservations | jq -r 'to_entries | map(select(.key == "controller-2"))[0] | .value.reservations.datacentre2'| wc -l)
      if [ $reservation -eq 1 ]; then
          exit 0
      else
          exit 1
      fi
