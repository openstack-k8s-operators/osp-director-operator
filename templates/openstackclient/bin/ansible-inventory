#!/usr/bin/env bash

# Script to generate a dynamic JSON ansible inventory based on the ctlplane OpenstackNet query

APISERVER=https://$KUBERNETES_SERVICE_HOST
SERVICEACCOUNT=/var/run/secrets/kubernetes.io/serviceaccount
NAMESPACE=$(cat ${SERVICEACCOUNT}/namespace)
TOKEN=$(cat ${SERVICEACCOUNT}/token)
CACERT=${SERVICEACCOUNT}/ca.crt

ROLE_RESERVATIONS=$(curl -s --cacert ${CACERT} --header "Authorization: Bearer ${TOKEN}" -X GET ${APISERVER}/apis/osp-director.openstack.org/v1beta1/namespaces/$NAMESPACE/openstacknets/ctlplane | jq .spec.roleReservations | jq -r "to_entries | map(select(.value.addToPredictableIPs == true and .value.reservations[].vip == false and .value.reservations[].deleted == false)) | unique[]")

ROLES=$(echo $ROLE_RESERVATIONS | jq -re '.key')

# function prints out host IPs
function printHostIPs {
  local ROLE=$1
  local ROLE_IPS=$2
  local LAST_IP=$(echo $ROLE_IPS | sed -e "s|^.* ||")

  for IP in $ROLE_IPS; do
    if [[ "$IP" == "$LAST_IP" ]]; then
      echo "        \"$IP\""
    else
      echo "        \"$IP\","
    fi
  done
}


if [ "$1" == "--list" ] ; then
# print out the 'overcloud' section (contains each rolename)
cat<<EOF
{
  "overcloud": {
        "children": [
EOF

LAST_ROLE=$(echo $ROLES | sed -e "s|^.* ||")
for ROLE in $ROLES; do
    if [[ "$ROLE" == "$LAST_ROLE" ]]; then
      echo "        \"$ROLE\""
    else
      echo "        \"$ROLE\","
    fi
done
echo '         ]'
echo '  },'

# print out the $ROLE sections which contain host IPs
for ROLE in $ROLES; do
ROLE_IPS=$(echo $ROLE_RESERVATIONS | jq -r "select(.key == \"$ROLE\") | .value.reservations[].ip")
cat<<EOF
  "$ROLE": {
        "hosts": [
EOF

    printHostIPs "$ROLE" "$ROLE_IPS"

echo '         ],'
echo '        "vars": {"ansible_ssh_user": "cloud-admin"}'

if [[ "$ROLE" == "$LAST_ROLE" ]]; then
  echo '  }'
else
  echo '  },'
fi
done

cat<<EOF
}
EOF

elif [ "$1" == "--host" ]; then
  echo '{"_meta": {"hostvars": {}}}'
else
  echo '{ }'
fi
