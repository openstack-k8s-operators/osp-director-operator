ARG GOLANG_BUILDER=golang:1.16
ARG OPERATOR_BASE_IMAGE=gcr.io/distroless/base

# Build the manager binary
FROM $GOLANG_BUILDER AS builder

#Arguments required by OSBS build system
ARG CACHITO_ENV_FILE=/remote-source/cachito.env

ARG REMOTE_SOURCE=.
ARG REMOTE_SOURCE_DIR=/remote-source
ARG REMOTE_SOURCE_SUBDIR=
ARG DEST_ROOT=/dest-root
ARG WHAT=osp-director-operator-agent

ARG GO_BUILD_EXTRA_ARGS=

COPY $REMOTE_SOURCE $REMOTE_SOURCE_DIR
WORKDIR $REMOTE_SOURCE_DIR/$REMOTE_SOURCE_SUBDIR

RUN if [ -f $CACHITO_ENV_FILE ] ; then source $CACHITO_ENV_FILE ; fi ; CGO_ENABLED=1 go build ${GO_BUILD_EXTRA_ARGS} -o ${DEST_ROOT}/${WHAT} ./containers/agent

# Use distroless as minimal base image to package the manager binary
# Refer to https://github.com/GoogleContainerTools/distroless for more details
FROM $OPERATOR_BASE_IMAGE

# Those arguments must match ones from builder
ARG DEST_ROOT=/dest-root
ARG WHAT=osp-director-operator-agent

ARG IMAGE_COMPONENT="osp-director-operator-agent-container"
ARG IMAGE_NAME="osp-director-agent-container-container"
ARG IMAGE_VERSION="1.0.0"
ARG IMAGE_SUMMARY="OSP-Director-Operator-agent"
ARG IMAGE_DESC="This is agent that works with the OSP Director Operator"
ARG IMAGE_TAGS="openstack director"

### DO NOT EDIT LINES BELOW
# Auto generated using CI tools from
# https://github.com/openstack-k8s-operators/openstack-k8s-operators-ci

# Labels required by upstream and osbs build system
LABEL com.redhat.component="${IMAGE_COMPONENT}" \
      name="${IMAGE_NAME}" \
      version="${IMAGE_VERSION}" \
      summary="${IMAGE_SUMMARY}" \
      io.k8s.name="${IMAGE_NAME}" \
      io.k8s.description="${IMAGE_DESC}" \
      io.openshift.tags="${IMAGE_TAGS}"
### DO NOT EDIT LINES ABOVE

WORKDIR /

# Install binary to WORKDIR
COPY --from=builder ${DEST_ROOT}/${WHAT} .

ENV PATH="/:${PATH}"

ENTRYPOINT ["/osp-director-operator-agent"]
